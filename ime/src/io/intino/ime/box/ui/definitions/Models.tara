dsl Konos

use Editors
use UI
use Theme

Template modelsTemplate as Relative(height=100%, width=100%)
	TemplateStamp(template=modelsHeaderTemplate) header

	Block(layout=Vertical Flexible CenterCenter, visible=false) openingModelBlock
		Spinner(mode=Ring, color="secondary")
		Text(value="" , translate=true, format=h3 airTop) openingModelMessage

	Block(layout=Horizontal Flexible Center, format=greyBackground) bodyBlock as Relative(width=100%)
		Block(format=airLeft airRight) as Relative(width=20%, offsetWidth=10px)
			Block(layout=Horizontal, format=middleTopSpaced middleBottomSpaced minPanelHeaderHeight)
				Block(layout=Horizontal Center, format=tag, visible=false) navigationDialog
					Text(format=blackColor) navigationDialogTitle
					MaterialIconButton(icon="Clear", size=Small, title="Show all", format=smallIconSize middleAirLeft blackColor) navigationDialogRemove
			Block(layout=Vertical Flexible, format=leftPanelStyle modelsStyle)
				Block(format=airLeft airRight airBottom) > Text search as Editable(placeholder="Filter...")
				Grouping(collections = empty) owner as Labeled("Owner")

		Block(layout=Vertical Flexible) as Relative(height=100%)
			Block(layout=Horizontal, format=middleTopSpaced middleBottomSpaced airLeft airRight autoHeight)
				Block(layout=Horizontal Flexible)
					Text countLanguages
				Block(layout=Horizontal EndJustified)
					Link(title="most used", format=airRight, visible=false) mostUsedLink as Action
					Text(value="most used", format=airRight, translate=true) mostUsedText
					Link(title="most recents", format=airRight) mostRecentsLink as Action
					Text(value="most recents", format=airRight, visible=false, translate=true) mostRecentsText

			Block(layout=Vertical Flexible, format=mainPanelStyle modelsStyle)
				TemplateStamp(template=modelsCatalog) modelsCatalog


Template(layout=Vertical Flexible) modelsCatalog as Relative(height=100%, width=100%)
	Text(format=h4 middleAirBottom) title

	Toolbar(format=dialog greyBackground) as Linked(to=body.modelTable)
		Button(title="Start modeling", highlight=Fill, format=airRight, visible=false) addModelTrigger as Action
		Button(title="Remove selection", highlight=Outline, size=Small, format=airRight, visible=false) removeSelection as Action(context=Selection) Affirmed("Are you sure to remove selected models?")
		SearchBox(visible=false, collections=body.modelTable) searchBox

	Block(layout=Vertical Flexible) body
		Table(itemClass="io.intino.ime.model.Model") modelTable as Selectable(multiple=true)
			noItemsMessage = "No models"
			Mold
				Heading modelLabelHeading > Text(value="Title") labelSorting
				Item(height=30px, width=55%) modelLabelItem
					Block(layout=Horizontal)
						Link(title="") label as Action
						Text(value="is example", format=pill airLeft, visible=false) accessType as Highlighted(textColor="white", backgroundColor="#777")
			Mold
				Heading modelLanguageHeading > Sorting(collections=modelTable) languageSorting as OrderBy Labeled("Language")
				Item(height=30px, width=15%) modelLanguageItem > Text language
			Mold
				Heading modelOwnerHeading > Sorting(collections=modelTable) ownerSorting as OrderBy Labeled("Owner")
				Item(height=30px, width=20%) modelOwnerItem > Text owner
			Mold
				Heading operationsHeading > Text(value="Operations", translate=true)
				Item(height=30px, width=10%) operationsItem
					Block(layout=Horizontal, visible=false) operationsToolbar
						TemplateStamp(template=cloneModelEditor) cloneModelEditor
						MaterialIconButton(title="Remove model", icon="Delete", size=Small) removeModel as Action Affirmed("Are you sure to remove model?") Readonly
						TemplateStamp(template=modelSettingsEditor) settingsEditor

	Dialog(title="Start modeling") addModelDialog as Absolute(width=800px, height=600px)
        Block as Relative(height=100%, offsetHeight=40px)
			Text(format=doubleAirBottom) labelField as Editable Labeled("Title") Focused
        	Block
        		Text(value="Language", translate=true, format=labelColor)
	        	Selector(format=doubleAirBottom) languageField as CollectionBox(placeholder="Select language")
	        		Table(itemClass="io.intino.ime.model.Language") languageTable as Selectable
	        			noItemsMessage = "No languages"
	        			Mold
	        				Heading ltLogoHeading
	        				Item(height=30px, width=10%) ltLogoItem > Image logo as Absolute(height=50px, width=50px)
	        			Mold
	        				Heading ltNameHeading > Text(value="Name", translate=true)
	        				Item(height=30px, width=20%) ltNameItem > Text name
	        			Mold
	        				Heading ltDescriptionHeading > Text(value="Description", translate=true)
	        				Item(height=30px, width=40%) ltDescriptionItem > Text(cropWithEllipsis=40 Chars) description
	        			Mold
	        				Heading ltOwnerHeading > Text(value="Owner", translate=true)
	        				Item(height=30px, width=30%) ltOwnerItem > Text owner
		Divider
        Block(layout=Horizontal EndJustified)
            Button(title="Cancel", size=Small, format=airRight) as CloseDialog(addModelDialog)
            Button(title="Start", size=Small, highlight=Fill) createModel as Action

	Dialog(title="Start modeling") addLanguageModelDialog as Absolute(height=360px, width=400px)
        Block as Relative(height=100%, offsetHeight=40px)
        	Block(format=doubleAirBottom)
        		Text(value="Language", translate=true, format=labelColor)
        		Text languageModelField
			Text(format=doubleAirBottom) languageModelLabelField as Editable Labeled("Title") Focused
		Divider
        Block(layout=Horizontal EndJustified)
            Button(title="Cancel", size=Small, format=airRight) as CloseDialog(addLanguageModelDialog)
            Button(title="Start", size=Small, highlight=Fill) createLanguageModel as Action

Template(format=headerBackground middleTopSpaced middleBottomSpaced) modelsHeaderTemplate
	Block(layout=Horizontal, format=centered rightSpaced) content as Relative(width=100%)
		Block(layout=Horizontal Flexible Center, format=airLeft relative)
			Link(title="", format=logoLink) logoLink as OpenPage(ImeElements.home)
			Image(value="/logo-dark.png", format=airRight, mobileReduceFactor=75%) as Absolute(width=50px, height=45px)
			Block
				Text(value="Models", format=appViewTextStyle)
				Switch(title="", state=On) appViewSwitch
			Block(layout=Vertical Flexible, format=airLeft)
				Block(layout=Vertical CenterCenter) > Block(format=searchBox) as Relative(width=60%) > Text(format=searchBoxBackground) searchField as Editable(placeholder="Search")
		Block(layout=Horizontal Center EndJustified)
			Link(title="LOG IN", format=white airRight, visible=false) login as OpenPage(ImeElements.dashboard)
			MaterialIconButton(title="Dashboard", icon="Home", titlePosition=Bottom, format=airRight iconButtonColor, size=Small, visible=false) dashboard as OpenPage(ImeElements.dashboard)
			User(mode=OnlyPhoto, visible=false, format=relative) user
				Block(layout=Horizontal EndJustified, format=userToolbar)
					MaterialIconButton(title="Set dark mode", format=airRight, icon="Brightness4", size=Small) as SetDarkMode
					MaterialIconButton(title="Set light mode", format=airRight, icon="Brightness7", size=Small) as SetLightMode
				Selector as ListBox
					Block as Option > Link(title="Home") as OpenPage(page=ImeElements.home)
					Block as Option > Link(title="Dashboard") userHome as OpenPage(page=ImeElements.dashboard)